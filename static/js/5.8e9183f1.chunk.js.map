{"version":3,"file":"static/js/5.8e9183f1.chunk.js","mappings":"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","sources":["components/Modal/ModalPrice.js","components/Modal/ModalProduct.js","components/ProductsSet/ProductDetailSection.js","components/ProductsSet/ProductDetail.js","components/ButtonPrice/ButtonPrice.js","components/ProductsSet/ProductPage.js","pages/Products/New.js"],"sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  const closeModal = useCallback(() => onRequestClose(), [onRequestClose]);\n\n  useEffect(() => {\n    const handleEscape = event =>\n      isOpen && event.key === 'Escape' && closeModal();\n    document.body.classList.toggle('modal-open', isOpen);\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n    document.addEventListener('keydown', handleEscape);\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, closeModal]);\n\n  const overlayClassName = isOpen ? 'modal_overlay active' : 'modal_overlay';\n  const modalClassName = isOpen ? 'modal_price active' : 'modal_price';\n\n  return (\n    <div\n      className={`${overlayClassName}`}\n      id=\"modalOverlay\"\n      onClick={closeModal}\n    >\n      <div className={`${modalClassName}`} onClick={e => e.stopPropagation()}>\n        <button onClick={closeModal} className=\"close_modal\">\n          <svg className=\"icon_modal\">\n            <use xlinkHref={`${icons}#close`} />\n          </svg>\n        </button>\n        <div className=\"image_container\">\n          <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalPrice;\n","import React, { useEffect } from 'react';\nimport Slider from 'react-slick';\nimport { Transition } from 'react-transition-group';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst PrevArrow = ({ onClick }) => (\n  <div className=\"slide_arrow prev\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#left`} />\n    </svg>\n  </div>\n);\n\nconst NextArrow = ({ onClick }) => (\n  <div className=\"slide_arrow next\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#right`} />\n    </svg>\n  </div>\n);\n\nconst ModalProduct = ({ images, closeModal }) => {\n  useEffect(() => {\n    const closeOnEsc = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const closeOnClickOutside = event => {\n      if (event.target.classList.contains('modal_overlay')) {\n        closeModal();\n      }\n    };\n\n    document.body.addEventListener('keydown', closeOnEsc);\n    document.body.addEventListener('click', closeOnClickOutside);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEsc);\n      document.body.removeEventListener('click', closeOnClickOutside);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeModal]);\n\n  const settings = {\n    dots: true,\n    speed: 1500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    infinite: true,\n    pauseOnHover: false,\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n  };\n\n  return (\n    <Transition in={true}>\n      {state => (\n        <div className={`modal_overlay`} onClick={closeModal}>\n          <div\n            className={`modal_product modal-${state}`}\n            onClick={e => e.stopPropagation()}\n          >\n            <button type=\"button\" className=\"close_modal\" onClick={closeModal}>\n              <svg className=\"icon_modal\">\n                <use xlinkHref={`${icons}#close`} />\n              </svg>\n            </button>\n            <Slider {...settings}>\n              {images.map((imageData, index) => (\n                <div key={index} className=\"slide\">\n                  <img\n                    className=\"slide_img\"\n                    src={imageData.imageSrc}\n                    alt={`Slide ${index + 1}`}\n                  />\n                  <p\n                    style={{\n                      textAlign: 'center',\n                      marginTop: '10px',\n                      width: '100%',\n                    }}\n                  >\n                    {imageData.text.includes('(') ? (\n                      <>\n                        {imageData.text.substring(\n                          0,\n                          imageData.text.indexOf('(')\n                        )}\n                        <span style={{ fontWeight: 'bold', color: 'red' }}>\n                          {imageData.text.substring(\n                            imageData.text.indexOf('(')\n                          )}\n                        </span>\n                      </>\n                    ) : (\n                      imageData.text\n                    )}\n                  </p>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nexport default ModalProduct;\n","import React from 'react';\n\nconst ProductDetailSection = ({\n  productImage,\n  title,\n  description,\n  openSlider,\n  sliderImages,\n}) => {\n  return (\n    <section className=\"section3\" onClick={() => openSlider(sliderImages)}>\n      <div className=\"container\">\n        <div className=\"product_detail open-modal_product\">\n          <img\n            className=\"product_detail_image\"\n            src={productImage}\n            alt={title}\n          />\n          <div className=\"product_detail_info\">\n            <h2>{title}</h2>\n            <p dangerouslySetInnerHTML={{ __html: description }} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductDetailSection;\n","import React, { useState } from 'react';\nimport CreateImageSlider from '../Modal/ModalProduct';\nimport ProductDetailSection from './ProductDetailSection';\nimport './styles.css';\n\nconst ProductDetail = ({ product }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [images, setImages] = useState([]);\n\n  const openSlider = images => {\n    setIsModalOpen(true);\n    setImages(images);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setImages([]);\n  };\n\n  const createSliderImages = (product, prefix) => {\n    const sliderImages = [];\n\n    for (let index = 1; index <= 5; index++) {\n      const imageSrc = product[`${prefix}${index}`];\n      const textKey = `${prefix.replace('Img', 'Text')}${index}`;\n      const text = product[textKey];\n\n      if (imageSrc) {\n        sliderImages.push({\n          imageSrc: `${process.env.PUBLIC_URL}${imageSrc}`,\n          text: text,\n        });\n      }\n    }\n\n    return sliderImages;\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <main>\n      <ProductDetailSection\n        productImage={process.env.PUBLIC_URL + product.productImg_1}\n        title={product.title_product_1}\n        description={product.description_detail_1}\n        openSlider={() =>\n          openSlider(createSliderImages(product, 'sliderImg_1_'))\n        }\n      />\n      {product.title_product_2 && (\n        <ProductDetailSection\n          productImage={process.env.PUBLIC_URL + product.productImg_2}\n          title={product.title_product_2}\n          description={product.description_detail_2}\n          openSlider={() =>\n            openSlider(createSliderImages(product, 'sliderImg_2_'))\n          }\n        />\n      )}\n      {isModalOpen && (\n        <CreateImageSlider images={images} closeModal={closeModal} />\n      )}\n    </main>\n  );\n};\n\nexport default ProductDetail;\n","import React from 'react';\nimport \"./styles.css\";\n\nconst ButtonPrice = ({ onClick }) => (\n  <section className=\"section4\">\n    <div className=\"button\">\n      <button\n        type=\"button\"\n        className=\"product_button open-modal_price\"\n        onClick={onClick}\n      >\n        ПОДИВИТИСЯ ПРАЙС - ЛИСТ\n      </button>\n    </div>\n  </section>\n);\n\nexport default ButtonPrice;\n","import React, { useState } from 'react';\nimport ProductDetails from './ProductDetail';\nimport ButtonPrice from '../../components/ButtonPrice/ButtonPrice';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productData from '../../assets/productsData.json';\n\nconst ProductPage = ({ productName }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const product = productData.find(\n    product => product.productName === productName\n  );\n\n  if (!product) {\n    return <div>Product not found</div>;\n  }\n\n  const handleButtonPriceClick = () => {\n    const currentPath = window.location.pathname;\n    const imageName = currentPath.split('/').pop();\n\n    setImgSrc(`${process.env.PUBLIC_URL}/prices/${imageName}.jpg`);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <>\n      <ProductDetails product={product} />\n      <ButtonPrice onClick={handleButtonPriceClick} />\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </>\n  );\n};\n\nexport default ProductPage;","import React from 'react';\nimport ProductPage from '../../components/ProductsSet/ProductPage';\n\nconst New = () => {\n  const productName = 'new';\n\n  return <ProductPage productName={productName} />;\n};\n\nexport default New;"],"names":["_ref","imgSrc","isOpen","onRequestClose","closeModal","useCallback","useEffect","handleEscape","event","key","document","body","classList","toggle","style","overflow","addEventListener","removeEventListener","overlayClassName","modalClassName","_jsx","className","concat","id","onClick","children","_jsxs","e","stopPropagation","xlinkHref","icons","src","alt","PrevArrow","NextArrow","_ref2","_ref3","images","closeOnEsc","closeOnClickOutside","target","contains","settings","dots","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","infinite","pauseOnHover","prevArrow","nextArrow","Transition","in","state","type","Slider","map","imageData","index","imageSrc","textAlign","marginTop","width","text","includes","_Fragment","substring","indexOf","fontWeight","color","productImage","title","description","openSlider","sliderImages","dangerouslySetInnerHTML","__html","product","isModalOpen","setIsModalOpen","useState","setImages","createSliderImages","prefix","replace","push","process","ProductDetailSection","productImg_1","title_product_1","description_detail_1","title_product_2","productImg_2","description_detail_2","CreateImageSlider","productName","modalIsOpen","setModalIsOpen","setImgSrc","productData","find","ProductDetails","ButtonPrice","handleButtonPriceClick","imageName","window","location","pathname","split","pop","ModalPrice","New","ProductPage"],"sourceRoot":""}