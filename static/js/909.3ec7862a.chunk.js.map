{"version":3,"file":"static/js/909.3ec7862a.chunk.js","mappings":"8LAMA,MAiCA,EAjCmBA,IAAyC,IAAxC,OAAEC,EAAM,OAAEC,EAAM,eAAEC,GAAgBH,EASpD,OARAI,EAAAA,EAAAA,YAAU,KACJF,EACFG,SAASC,KAAKC,UAAUC,IAAI,cAE5BH,SAASC,KAAKC,UAAUE,OAAO,aACjC,GACC,CAACP,KAGFQ,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,GAAIV,EAAOW,SACpBC,IACCC,EAAAA,EAAAA,MAACC,IAAK,CACJd,OAAQA,EACRC,eAAgBA,EAChBc,aAAa,cACbC,iBAAiB,gBACjBC,UAAS,uBAAAC,OAAyBN,GAAQD,SAAA,EAE1CH,EAAAA,EAAAA,KAAA,UAAQW,QAASlB,EAAgBgB,UAAU,cAAaN,UACtDH,EAAAA,EAAAA,KAAA,OAAKS,UAAU,aAAYN,UACzBH,EAAAA,EAAAA,KAAA,OAAKY,UAAS,GAAAF,OAAKG,EAAAA,EAAK,iBAG5Bb,EAAAA,EAAAA,KAAA,OAAKS,UAAU,kBAAiBN,UAC9BH,EAAAA,EAAAA,KAAA,OAAKc,IAAKvB,EAAQwB,IAAI,4DAAeN,UAAU,sBAI1C,C,oGC7BjB,MAgEA,EAhEgBO,KACd,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxC5B,EAAQ6B,IAAaD,EAAAA,EAAAA,UAAS,IAWrC,OACEd,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAWN,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAIS,UAAU,UAASN,SACpBkB,EAAaC,KACZ,CAAAhC,EAA0DiC,KAAE,IAA3D,YAAEC,EAAW,MAAEC,EAAK,cAAEC,EAAa,YAAEC,EAAW,IAAEC,GAAKtC,EAAA,OACtDe,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACEH,EAAAA,EAAAA,KAAC6B,EAAAA,GAAI,CAACC,GAAE,aAAApB,OAAec,EAAYO,eAAgB5B,UACjDE,EAAAA,EAAAA,MAAA,OAAKI,UAAU,gBAAeN,SAAA,EAC5BE,EAAAA,EAAAA,MAAA,OAAKI,UAAU,gBAAeN,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAKc,IAAKkB,cAAyBJ,EAAKb,IAAKU,KAC7CzB,EAAAA,EAAAA,KAAA,KAAGS,UAAU,eAAcN,SAAEwB,QAE/B3B,EAAAA,EAAAA,KAAA,OAAKS,UAAU,YAAWN,UACxBH,EAAAA,EAAAA,KAAA,OAAKS,UAAU,YAAWN,UACxBH,EAAAA,EAAAA,KAAA,MACES,UAAU,aACVwB,MAAO,CAAEC,WAAY,YAAa/B,SAEjCuB,EAAcS,QAAQ,WAAY,kBAM7CnC,EAAAA,EAAAA,KAAA,OAAKS,UAAU,SAAQN,UACrBH,EAAAA,EAAAA,KAAA,UACEoC,KAAK,SACL3B,UAAU,gCACVE,QAASA,IArCPpB,KAChB6B,EAAU7B,GACV2B,GAAe,EAAK,EAoCJmB,CAAU,GAAD3B,OACJsB,cAAsB,YAAAtB,OAAWc,EAAW,SAElDrB,SACF,kEA5BIoB,EAgCJ,OAKXvB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACT/C,OAAQA,EACRC,OAAQyB,EACRxB,eAjDa8C,KACjBrB,GAAe,EAAM,MAkDf,C","sources":["components/Modal/ModalPrice.js","pages/Product/Product.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { Transition } from 'react-transition-group';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isOpen]);\n\n  return (\n    <Transition in={isOpen}>\n      {state => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={onRequestClose}\n          contentLabel=\"Image Modal\"\n          overlayClassName=\"modal_overlay\"\n          className={`modal_content modal-${state}`}\n        >\n          <button onClick={onRequestClose} className=\"close_modal\">\n            <svg className=\"icon_modal\">\n              <use xlinkHref={`${icons}#close`} />\n            </svg>\n          </button>\n          <div className=\"image_container\">\n            <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n          </div>\n        </Modal>\n      )}\n    </Transition>\n  );\n};\n\nexport default ModalPrice;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productsData from '../../assets/productsData.json';\nimport './styles.css';\n\nconst Product = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const openModal = imgSrc => {\n    setImgSrc(imgSrc);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <ul className=\"content\">\n        {productsData.map(\n          ({ productName, title, title_product, description, img }, id) => (\n            <li key={id}>\n              <Link to={`/products/${productName.toLowerCase()}`}>\n                <div className=\"content__clik\">\n                  <div className=\"overlay-thumb\">\n                    <img src={process.env.PUBLIC_URL + img} alt={title} />\n                    <p className=\"overlay-text\">{description}</p>\n                  </div>\n                  <div className=\"flex-grow\">\n                    <div className=\"card-port\">\n                      <h2\n                        className=\"titel-port\"\n                        style={{ whiteSpace: 'pre-line' }}\n                      >\n                        {title_product.replace(/<br \\/>/g, '\\n')}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n              <div className=\"button\">\n                <button\n                  type=\"button\"\n                  className=\"price_button open-modal_price\"\n                  onClick={() =>\n                    openModal(\n                      `${process.env.PUBLIC_URL}/prices/${productName}.jpg`\n                    )\n                  }\n                >\n                  ПРАЙС - ЛИСТ\n                </button>\n              </div>\n            </li>\n          )\n        )}\n      </ul>\n\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </div>\n  );\n};\n\nexport default Product;"],"names":["_ref","imgSrc","isOpen","onRequestClose","useEffect","document","body","classList","add","remove","_jsx","Transition","in","children","state","_jsxs","Modal","contentLabel","overlayClassName","className","concat","onClick","xlinkHref","icons","src","alt","Product","modalIsOpen","setModalIsOpen","useState","setImgSrc","productsData","map","id","productName","title","title_product","description","img","Link","to","toLowerCase","process","style","whiteSpace","replace","type","openModal","ModalPrice","closeModal"],"sourceRoot":""}