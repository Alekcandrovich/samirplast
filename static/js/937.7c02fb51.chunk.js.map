{"version":3,"file":"static/js/937.7c02fb51.chunk.js","mappings":"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","sources":["components/Modal/ModalPrice.js","components/Modal/ModalProduct.js","components/ProductsSet/ProductDetailSection.js","components/ProductsSet/ProductDetail.js","components/ButtonPrice/ButtonPrice.js","components/ProductsSet/ProductPage.js","pages/Products/Meshki.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Modal from 'react-modal';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isOpen]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      contentLabel=\"Image Modal\"\n      overlayClassName=\"modal_overlay\"\n      className=\"modal_content\"\n    >\n      <button onClick={onRequestClose} className=\"close_modal\">\n        <svg className=\"icon_modal\">\n          <use xlinkHref={`${icons}#close`} />\n        </svg>\n      </button>\n      <div className=\"image_container\">\n        <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n      </div>\n    </Modal>\n  );\n};\n\nexport default ModalPrice;\n","import React, { useEffect } from 'react';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst PrevArrow = ({ onClick }) => (\n  <div className=\"slide_arrow prev\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#left`} />\n    </svg>\n  </div>\n);\n\nconst NextArrow = ({ onClick }) => (\n  <div className=\"slide_arrow next\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#right`} />\n    </svg>\n  </div>\n);\n\nconst ModalProduct = ({ images, closeModal }) => {\n  useEffect(() => {\n    const closeOnEsc = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const closeOnClickOutside = event => {\n      if (event.target.classList.contains('modal_overlay')) {\n        closeModal();\n      }\n    };\n\n    document.body.addEventListener('keydown', closeOnEsc);\n    document.body.addEventListener('click', closeOnClickOutside);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEsc);\n      document.body.removeEventListener('click', closeOnClickOutside);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeModal]);\n\n  const settings = {\n    dots: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    infinite: true,\n    pauseOnHover: false,\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n  };\n\n  return (\n    <div className=\"modal_overlay\" onClick={closeModal}>\n      <div className=\"modal_product\" onClick={e => e.stopPropagation()}>\n        <button type=\"button\" className=\"close_modal\" onClick={closeModal}>\n          <svg className=\"icon_modal\">\n            <use xlinkHref={`${icons}#close`} />\n          </svg>\n        </button>\n        <Slider {...settings}>\n          {images.map((imageData, index) => (\n            <div key={index} className=\"slide\">\n              <img className=\"slide_img\" src={imageData.imageSrc} alt={`Slide ${index + 1}`} />\n              <p\n                style={{\n                  textAlign: 'center',\n                  marginTop: '10px',\n                  width: '100%',\n                }}\n              >\n                {imageData.text.includes('(') ? (\n                  <>\n                    {imageData.text.substring(0, imageData.text.indexOf('('))}\n                    <span style={{ fontWeight: 'bold', color: 'red' }}>\n                      {imageData.text.substring(imageData.text.indexOf('('))}\n                    </span>\n                  </>\n                ) : (\n                  imageData.text\n                )}\n              </p>\n            </div>\n          ))}\n        </Slider>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalProduct;\n","import React from 'react';\n\nconst ProductDetailSection = ({\n  productImage,\n  title,\n  description,\n  openSlider,\n  sliderImages,\n}) => {\n  return (\n    <section className=\"section3\" onClick={() => openSlider(sliderImages)}>\n      <div className=\"container\">\n        <div className=\"product_detail open-modal_product\">\n          <img\n            className=\"product_detail_image\"\n            src={productImage}\n            alt={title}\n          />\n          <div className=\"product_detail_info\">\n            <h2>{title}</h2>\n            <p dangerouslySetInnerHTML={{ __html: description }} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductDetailSection;\n","import React, { useState } from 'react';\nimport CreateImageSlider from '../Modal/ModalProduct';\nimport ProductDetailSection from './ProductDetailSection';\nimport './styles.css';\n\nconst ProductDetail = ({ product }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [images, setImages] = useState([]);\n\n  const openSlider = images => {\n    setIsModalOpen(true);\n    setImages(images);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setImages([]);\n  };\n\n  const createSliderImages = (product, prefix) => {\n    const sliderImages = [];\n\n    for (let index = 1; index <= 5; index++) {\n      const imageSrc = product[`${prefix}${index}`];\n      const textKey = `${prefix.replace('Img', 'Text')}${index}`;\n      const text = product[textKey];\n\n      if (imageSrc) {\n        sliderImages.push({\n          imageSrc: `${process.env.PUBLIC_URL}${imageSrc}`,\n          text: text,\n        });\n      }\n    }\n\n    return sliderImages;\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <main>\n      <ProductDetailSection\n        productImage={process.env.PUBLIC_URL + product.productImg_1}\n        title={product.title_product_1}\n        description={product.description_detail_1}\n        openSlider={() =>\n          openSlider(createSliderImages(product, 'sliderImg_1_'))\n        }\n      />\n      {product.title_product_2 && (\n        <ProductDetailSection\n          productImage={process.env.PUBLIC_URL + product.productImg_2}\n          title={product.title_product_2}\n          description={product.description_detail_2}\n          openSlider={() =>\n            openSlider(createSliderImages(product, 'sliderImg_2_'))\n          }\n        />\n      )}\n      {isModalOpen && (\n        <CreateImageSlider images={images} closeModal={closeModal} />\n      )}\n    </main>\n  );\n};\n\nexport default ProductDetail;\n","import React from 'react';\nimport \"./styles.css\";\n\nconst ButtonPrice = ({ onClick }) => (\n  <section className=\"section4\">\n    <div className=\"button\">\n      <button\n        type=\"button\"\n        className=\"product_button open-modal_price\"\n        onClick={onClick}\n      >\n        ПОДИВИТИСЯ ПРАЙС - ЛИСТ\n      </button>\n    </div>\n  </section>\n);\n\nexport default ButtonPrice;\n","import React, { useState } from 'react';\nimport ProductDetails from './ProductDetail';\nimport ButtonPrice from '../../components/ButtonPrice/ButtonPrice';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productData from '../../assets/productsData.json';\n\nconst ProductPage = ({ productName }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const product = productData.find(\n    product => product.productName === productName\n  );\n\n  if (!product) {\n    return <div>Product not found</div>;\n  }\n\n  const handleButtonPriceClick = () => {\n    const currentPath = window.location.pathname;\n    const imageName = currentPath.split('/').pop();\n\n    setImgSrc(`${process.env.PUBLIC_URL}/prices/${imageName}.jpg`);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <>\n      <ProductDetails product={product} />\n      <ButtonPrice onClick={handleButtonPriceClick} />\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </>\n  );\n};\n\nexport default ProductPage;","import React from 'react';\nimport ProductPage from '../../components/ProductsSet/ProductPage';\n\nconst Meshki = () => {\n  const productName = 'meshki';\n\n  return <ProductPage productName={productName} />;\n};\n\nexport default Meshki;"],"names":["_ref","imgSrc","isOpen","onRequestClose","useEffect","document","body","classList","add","remove","_jsxs","Modal","contentLabel","overlayClassName","className","children","_jsx","onClick","xlinkHref","concat","icons","src","alt","PrevArrow","NextArrow","_ref2","_ref3","images","closeModal","closeOnEsc","event","key","closeOnClickOutside","target","contains","addEventListener","style","overflow","removeEventListener","settings","dots","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","infinite","pauseOnHover","prevArrow","nextArrow","e","stopPropagation","type","Slider","map","imageData","index","imageSrc","textAlign","marginTop","width","text","includes","_Fragment","substring","indexOf","fontWeight","color","productImage","title","description","openSlider","sliderImages","dangerouslySetInnerHTML","__html","product","isModalOpen","setIsModalOpen","useState","setImages","createSliderImages","prefix","replace","push","process","ProductDetailSection","productImg_1","title_product_1","description_detail_1","title_product_2","productImg_2","description_detail_2","CreateImageSlider","productName","modalIsOpen","setModalIsOpen","setImgSrc","productData","find","ProductDetails","ButtonPrice","handleButtonPriceClick","imageName","window","location","pathname","split","pop","ModalPrice","Meshki","ProductPage"],"sourceRoot":""}