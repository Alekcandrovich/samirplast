{"version":3,"file":"static/js/679.2c489342.chunk.js","mappings":"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","sources":["components/Modal/ModalPrice.js","components/Modal/ModalProduct.js","components/ProductsSet/ProductDetailSection.js","components/ProductsSet/ProductDetail.js","components/ButtonPrice/ButtonPrice.js","components/ProductsSet/ProductPage.js","pages/Products/Rukav.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import Modal from 'react-modal';\n// import { Transition } from 'react-transition-group';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   return (\n//     <Transition in={isOpen}>\n//       {state => (\n//         <Modal\n//           isOpen={isOpen}\n//           onRequestClose={onRequestClose}\n//           contentLabel=\"Image Modal\"\n//           overlayClassName=\"modal_overlay\"\n//           className={`modal_price modal-${state}`}\n//         >\n//           <button onClick={onRequestClose} className=\"close_modal\">\n//             <svg className=\"icon_modal\">\n//               <use xlinkHref={`${icons}#close`} />\n//             </svg>\n//           </button>\n//           <div className=\"image_container\">\n//             <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//           </div>\n//         </Modal>\n//       )}\n//     </Transition>\n//   );\n// };\n\n// export default ModalPrice;\n\n\n\n\n\n\n\n\n\nimport React, { useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Modal from 'react-modal';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isOpen]);\n\n  const modalVariants = {\n    hidden: { opacity: 0, scale: 0 },\n    visible: {\n      opacity: 1,\n      scale: 1,\n      transition: { duration: 0.5, ease: 'easeInOut' },\n    },\n  };\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          key=\"modal\"\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"hidden\"\n          variants={modalVariants}\n        >\n          <Modal\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            contentLabel=\"Image Modal\"\n            overlayClassName=\"modal_overlay\"\n            className=\"modal_price\"\n          >\n            <motion.div\n              className=\"image_container\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.5, ease: 'easeInOut' }}\n            >\n              <button onClick={onRequestClose} className=\"close_modal\">\n                <svg className=\"icon_modal\">\n                  <use xlinkHref={`${icons}#close`} />\n                </svg>\n              </button>\n              <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n            </motion.div>\n          </Modal>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n};\n\nexport default ModalPrice;\n","import React, { useEffect } from 'react';\nimport Slider from 'react-slick';\nimport { Transition } from 'react-transition-group';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst PrevArrow = ({ onClick }) => (\n  <div className=\"slide_arrow prev\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#left`} />\n    </svg>\n  </div>\n);\n\nconst NextArrow = ({ onClick }) => (\n  <div className=\"slide_arrow next\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#right`} />\n    </svg>\n  </div>\n);\n\nconst ModalProduct = ({ images, closeModal }) => {\n  useEffect(() => {\n    const closeOnEsc = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const closeOnClickOutside = event => {\n      if (event.target.classList.contains('modal_overlay')) {\n        closeModal();\n      }\n    };\n\n    document.body.addEventListener('keydown', closeOnEsc);\n    document.body.addEventListener('click', closeOnClickOutside);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEsc);\n      document.body.removeEventListener('click', closeOnClickOutside);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeModal]);\n\n  const settings = {\n    dots: true,\n    speed: 1500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    infinite: true,\n    pauseOnHover: false,\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n  };\n\n  return (\n    <Transition in={true}>\n      {state => (\n        <div className={`modal_overlay`} onClick={closeModal}>\n          <div\n            className={`modal_product modal-${state}`}\n            onClick={e => e.stopPropagation()}\n          >\n            <button type=\"button\" className=\"close_modal\" onClick={closeModal}>\n              <svg className=\"icon_modal\">\n                <use xlinkHref={`${icons}#close`} />\n              </svg>\n            </button>\n            <Slider {...settings}>\n              {images.map((imageData, index) => (\n                <div key={index} className=\"slide\">\n                  <img\n                    className=\"slide_img\"\n                    src={imageData.imageSrc}\n                    alt={`Slide ${index + 1}`}\n                  />\n                  <p\n                    style={{\n                      textAlign: 'center',\n                      marginTop: '10px',\n                      width: '100%',\n                    }}\n                  >\n                    {imageData.text.includes('(') ? (\n                      <>\n                        {imageData.text.substring(\n                          0,\n                          imageData.text.indexOf('(')\n                        )}\n                        <span style={{ fontWeight: 'bold', color: 'red' }}>\n                          {imageData.text.substring(\n                            imageData.text.indexOf('(')\n                          )}\n                        </span>\n                      </>\n                    ) : (\n                      imageData.text\n                    )}\n                  </p>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nexport default ModalProduct;\n","import React from 'react';\n\nconst ProductDetailSection = ({\n  productImage,\n  title,\n  description,\n  openSlider,\n  sliderImages,\n}) => {\n  return (\n    <section className=\"section3\" onClick={() => openSlider(sliderImages)}>\n      <div className=\"container\">\n        <div className=\"product_detail open-modal_product\">\n          <img\n            className=\"product_detail_image\"\n            src={productImage}\n            alt={title}\n          />\n          <div className=\"product_detail_info\">\n            <h2>{title}</h2>\n            <p dangerouslySetInnerHTML={{ __html: description }} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductDetailSection;\n","import React, { useState } from 'react';\nimport CreateImageSlider from '../Modal/ModalProduct';\nimport ProductDetailSection from './ProductDetailSection';\nimport './styles.css';\n\nconst ProductDetail = ({ product }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [images, setImages] = useState([]);\n\n  const openSlider = images => {\n    setIsModalOpen(true);\n    setImages(images);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setImages([]);\n  };\n\n  const createSliderImages = (product, prefix) => {\n    const sliderImages = [];\n\n    for (let index = 1; index <= 5; index++) {\n      const imageSrc = product[`${prefix}${index}`];\n      const textKey = `${prefix.replace('Img', 'Text')}${index}`;\n      const text = product[textKey];\n\n      if (imageSrc) {\n        sliderImages.push({\n          imageSrc: `${process.env.PUBLIC_URL}${imageSrc}`,\n          text: text,\n        });\n      }\n    }\n\n    return sliderImages;\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <main>\n      <ProductDetailSection\n        productImage={process.env.PUBLIC_URL + product.productImg_1}\n        title={product.title_product_1}\n        description={product.description_detail_1}\n        openSlider={() =>\n          openSlider(createSliderImages(product, 'sliderImg_1_'))\n        }\n      />\n      {product.title_product_2 && (\n        <ProductDetailSection\n          productImage={process.env.PUBLIC_URL + product.productImg_2}\n          title={product.title_product_2}\n          description={product.description_detail_2}\n          openSlider={() =>\n            openSlider(createSliderImages(product, 'sliderImg_2_'))\n          }\n        />\n      )}\n      {isModalOpen && (\n        <CreateImageSlider images={images} closeModal={closeModal} />\n      )}\n    </main>\n  );\n};\n\nexport default ProductDetail;\n","import React from 'react';\nimport \"./styles.css\";\n\nconst ButtonPrice = ({ onClick }) => (\n  <section className=\"section4\">\n    <div className=\"button\">\n      <button\n        type=\"button\"\n        className=\"product_button open-modal_price\"\n        onClick={onClick}\n      >\n        ПОДИВИТИСЯ ПРАЙС - ЛИСТ\n      </button>\n    </div>\n  </section>\n);\n\nexport default ButtonPrice;\n","import React, { useState } from 'react';\nimport ProductDetails from './ProductDetail';\nimport ButtonPrice from '../../components/ButtonPrice/ButtonPrice';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productData from '../../assets/productsData.json';\n\nconst ProductPage = ({ productName }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const product = productData.find(\n    product => product.productName === productName\n  );\n\n  if (!product) {\n    return <div>Product not found</div>;\n  }\n\n  const handleButtonPriceClick = () => {\n    const currentPath = window.location.pathname;\n    const imageName = currentPath.split('/').pop();\n\n    setImgSrc(`${process.env.PUBLIC_URL}/prices/${imageName}.jpg`);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <>\n      <ProductDetails product={product} />\n      <ButtonPrice onClick={handleButtonPriceClick} />\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </>\n  );\n};\n\nexport default ProductPage;","import React from 'react';\nimport ProductPage from '../../components/ProductsSet/ProductPage';\n\nconst Rukav = () => {\n  const productName = 'rukav';\n\n  return <ProductPage productName={productName} />;\n};\n\nexport default Rukav;"],"names":["_ref","imgSrc","isOpen","onRequestClose","useEffect","document","body","classList","add","remove","_jsx","AnimatePresence","children","motion","div","initial","animate","exit","variants","hidden","opacity","scale","visible","transition","duration","ease","Modal","contentLabel","overlayClassName","className","_jsxs","onClick","xlinkHref","concat","icons","src","alt","PrevArrow","NextArrow","_ref2","_ref3","images","closeModal","closeOnEsc","event","key","closeOnClickOutside","target","contains","addEventListener","style","overflow","removeEventListener","settings","dots","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","infinite","pauseOnHover","prevArrow","nextArrow","Transition","in","state","e","stopPropagation","type","Slider","map","imageData","index","imageSrc","textAlign","marginTop","width","text","includes","_Fragment","substring","indexOf","fontWeight","color","productImage","title","description","openSlider","sliderImages","dangerouslySetInnerHTML","__html","product","isModalOpen","setIsModalOpen","useState","setImages","createSliderImages","prefix","replace","push","process","ProductDetailSection","productImg_1","title_product_1","description_detail_1","title_product_2","productImg_2","description_detail_2","CreateImageSlider","productName","modalIsOpen","setModalIsOpen","setImgSrc","productData","find","ProductDetails","ButtonPrice","handleButtonPriceClick","imageName","window","location","pathname","split","pop","ModalPrice","Rukav","ProductPage"],"sourceRoot":""}