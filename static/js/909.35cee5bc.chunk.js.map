{"version":3,"file":"static/js/909.35cee5bc.chunk.js","mappings":"yJAwGA,MAuCA,EAvCmBA,IAAyC,IAAxC,OAAEC,EAAM,OAAEC,EAAM,eAAEC,GAAgBH,EACpD,MAAMI,GAAaC,EAAAA,EAAAA,cAAY,KAC7BF,GAAgB,GACf,CAACA,KAEJG,EAAAA,EAAAA,YAAU,KACJJ,EACFK,SAASC,KAAKC,UAAUC,IAAI,cAE5BH,SAASC,KAAKC,UAAUE,OAAO,cAGjC,MAAMC,EAAeC,IACfX,GAA4B,WAAlBW,EAAMC,SAAsBV,GAAY,EAIxD,OADAG,SAASQ,iBAAiB,UAAWH,GAC9B,IAAML,SAASS,oBAAoB,UAAWJ,EAAa,GACjE,CAACV,EAAQE,IAEZ,MAAMa,EAAmBf,EAAS,uBAAyB,gBACrDgB,EAAiBhB,EAAS,qBAAuB,cAEvD,OACEiB,EAAAA,EAAAA,KAAA,OAAKC,UAAWH,EAAkBI,GAAG,eAAeC,QAASlB,EAAWmB,UACtEC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWF,EAAgBI,QAASG,GAAKA,EAAEC,kBAAkBH,SAAA,EAChEJ,EAAAA,EAAAA,KAAA,UAAQG,QAASlB,EAAYgB,UAAU,cAAaG,UAClDJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYG,UACzBJ,EAAAA,EAAAA,KAAA,OAAKQ,UAAS,GAAAC,OAAKC,EAAAA,EAAK,iBAG5BV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBG,UAC9BJ,EAAAA,EAAAA,KAAA,OAAKW,IAAK7B,EAAQ8B,IAAI,4DAAeX,UAAU,sBAG/C,C,oGCrIV,MAgEA,EAhEgBY,KACd,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxClC,EAAQmC,IAAaD,EAAAA,EAAAA,UAAS,IAWrC,OACEX,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,YAAWG,SAAA,EACxBJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAASG,SACpBc,EAAaC,KACZ,CAAAtC,EAA0DqB,KAAE,IAA3D,YAAEkB,EAAW,MAAEC,EAAK,cAAEC,EAAa,YAAEC,EAAW,IAAEC,GAAK3C,EAAA,OACtDwB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEJ,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACC,GAAE,aAAAjB,OAAeW,EAAYO,eAAgBvB,UACjDC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gBAAeG,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,gBAAeG,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,OAAKW,IAAKiB,cAAyBJ,EAAKZ,IAAKS,KAC7CrB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcG,SAAEmB,QAE/BvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWG,UACxBJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWG,UACxBJ,EAAAA,EAAAA,KAAA,MACEC,UAAU,aACV4B,MAAO,CAAEC,WAAY,YAAa1B,SAEjCkB,EAAcS,QAAQ,WAAY,kBAM7C/B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQG,UACrBJ,EAAAA,EAAAA,KAAA,UACEgC,KAAK,SACL/B,UAAU,gCACVE,QAASA,IArCPrB,KAChBmC,EAAUnC,GACViC,GAAe,EAAK,EAoCJkB,CAAU,GAADxB,OACJmB,cAAsB,YAAAnB,OAAWW,EAAW,SAElDhB,SACF,kEA5BIF,EAgCJ,OAKXF,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,CACTpD,OAAQA,EACRC,OAAQ+B,EACR9B,eAjDaC,KACjB8B,GAAe,EAAM,MAkDf,C","sources":["components/Modal/ModalPrice.js","pages/Product/Product.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import Modal from 'react-modal';\n// import { Transition } from 'react-transition-group';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   return (\n//     <Transition in={isOpen}>\n//       {state => (\n//         <Modal\n//           isOpen={isOpen}\n//           onRequestClose={onRequestClose}\n//           contentLabel=\"Image Modal\"\n//           overlayClassName=\"modal_overlay\"\n//           className={`modal_price modal-${state}`}\n//         >\n//           <button onClick={onRequestClose} className=\"close_modal\">\n//             <svg className=\"icon_modal\">\n//               <use xlinkHref={`${icons}#close`} />\n//             </svg>\n//           </button>\n//           <div className=\"image_container\">\n//             <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//           </div>\n//         </Modal>\n//       )}\n//     </Transition>\n//   );\n// };\n\n// export default ModalPrice;\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import Modal from 'react-modal';\n// import { Transition } from 'react-transition-group';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   const transitionTimeout = 300; // Замените на ваше значение\n\n//   return (\n//     <Transition in={isOpen} timeout={transitionTimeout}>\n//       {state => (\n//         <Modal\n//           isOpen={isOpen}\n//           onRequestClose={onRequestClose}\n//           contentLabel=\"Image Modal\"\n//           overlayClassName=\"modal_overlay\"\n//           className={`modal_price modal-${state}`}\n//         >\n//           <button onClick={onRequestClose} className=\"close_modal\">\n//             <svg className=\"icon_modal\">\n//               <use xlinkHref={`${icons}#close`} />\n//             </svg>\n//           </button>\n//           <div className=\"image_container\">\n//             <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//           </div>\n//         </Modal>\n//       )}\n//     </Transition>\n//   );\n// };\n\n// export default ModalPrice;\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useCallback } from 'react';\nimport icons from './icons.svg';\nimport './styles_.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  const closeModal = useCallback(() => {\n    onRequestClose();\n  }, [onRequestClose]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    const handleEscape = event => {\n      if (isOpen && event.keyCode === 'Escape') closeModal();\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [isOpen, closeModal]);\n\n  const overlayClassName = isOpen ? 'modal_overlay active' : 'modal_overlay';\n  const modalClassName = isOpen ? 'modal_price active' : 'modal_price';\n\n  return (\n    <div className={overlayClassName} id=\"modalOverlay\" onClick={closeModal}>\n      <div className={modalClassName} onClick={e => e.stopPropagation()}>\n        <button onClick={closeModal} className=\"close_modal\">\n          <svg className=\"icon_modal\">\n            <use xlinkHref={`${icons}#close`} />\n          </svg>\n        </button>\n        <div className=\"image_container\">\n          <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalPrice;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productsData from '../../assets/productsData.json';\nimport './styles.css';\n\nconst Product = () => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const openModal = imgSrc => {\n    setImgSrc(imgSrc);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <ul className=\"content\">\n        {productsData.map(\n          ({ productName, title, title_product, description, img }, id) => (\n            <li key={id}>\n              <Link to={`/products/${productName.toLowerCase()}`}>\n                <div className=\"content__clik\">\n                  <div className=\"overlay-thumb\">\n                    <img src={process.env.PUBLIC_URL + img} alt={title} />\n                    <p className=\"overlay-text\">{description}</p>\n                  </div>\n                  <div className=\"flex-grow\">\n                    <div className=\"card-port\">\n                      <h2\n                        className=\"titel-port\"\n                        style={{ whiteSpace: 'pre-line' }}\n                      >\n                        {title_product.replace(/<br \\/>/g, '\\n')}\n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n              <div className=\"button\">\n                <button\n                  type=\"button\"\n                  className=\"price_button open-modal_price\"\n                  onClick={() =>\n                    openModal(\n                      `${process.env.PUBLIC_URL}/prices/${productName}.jpg`\n                    )\n                  }\n                >\n                  ПРАЙС - ЛИСТ\n                </button>\n              </div>\n            </li>\n          )\n        )}\n      </ul>\n\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </div>\n  );\n};\n\nexport default Product;"],"names":["_ref","imgSrc","isOpen","onRequestClose","closeModal","useCallback","useEffect","document","body","classList","add","remove","handleEscape","event","keyCode","addEventListener","removeEventListener","overlayClassName","modalClassName","_jsx","className","id","onClick","children","_jsxs","e","stopPropagation","xlinkHref","concat","icons","src","alt","Product","modalIsOpen","setModalIsOpen","useState","setImgSrc","productsData","map","productName","title","title_product","description","img","Link","to","toLowerCase","process","style","whiteSpace","replace","type","openModal","ModalPrice"],"sourceRoot":""}