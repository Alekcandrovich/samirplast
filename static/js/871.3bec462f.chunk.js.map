{"version":3,"file":"static/js/871.3bec462f.chunk.js","mappings":"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","sources":["components/Modal/ModalPrice.js","components/Modal/ModalProduct.js","components/ProductsSet/ProductDetailSection.js","components/ProductsSet/ProductDetail.js","components/ButtonPrice/ButtonPrice.js","components/ProductsSet/ProductPage.js","pages/Products/Streych.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { Transition } from 'react-transition-group';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isOpen]);\n\n  return (\n    <Transition in={isOpen}>\n      {state => (\n        <Modal\n          isOpen={isOpen}\n          onRequestClose={onRequestClose}\n          contentLabel=\"Image Modal\"\n          overlayClassName=\"modal_overlay\"\n          className={`modal_price modal-${state}`}\n        >\n          <button onClick={onRequestClose} className=\"close_modal\">\n            <svg className=\"icon_modal\">\n              <use xlinkHref={`${icons}#close`} />\n            </svg>\n          </button>\n          <div className=\"image_container\">\n            <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n          </div>\n        </Modal>\n      )}\n    </Transition>\n  );\n};\n\nexport default ModalPrice;\n\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import Modal from 'react-modal';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   const modalVariants = {\n//     hidden: { opacity: 0, scale: 0 },\n//     visible: {\n//       opacity: 1,\n//       scale: 1,\n//       transition: { duration: 1.5, ease: 'easeInOut' },\n//     },\n//   };\n\n//   return (\n//     <AnimatePresence>\n//       {isOpen && (\n//         <motion.div\n//           key=\"modal\"\n//           initial=\"hidden\"\n//           animate=\"visible\"\n//           exit=\"hidden\"\n//           variants={modalVariants}\n//         >\n//           <Modal\n//             isOpen={isOpen}\n//             onRequestClose={onRequestClose}\n//             contentLabel=\"Image Modal\"\n//             overlayClassName=\"modal_overlay\"\n//             className=\"modal_price\"\n//           >\n//             <motion.div\n//               className=\"image_container\"\n//               initial={{ opacity: 0 }}\n//               animate={{ opacity: 1 }}\n//               exit={{ opacity: 0 }}\n//               transition={{ duration: 1.0, ease: 'easeInOut' }}\n//             >\n//               <button onClick={onRequestClose} className=\"close_modal\">\n//                 <svg className=\"icon_modal\">\n//                   <use xlinkHref={`${icons}#close`} />\n//                 </svg>\n//               </button>\n//               <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//             </motion.div>\n//           </Modal>\n//         </motion.div>\n//       )}\n//     </AnimatePresence>\n//   );\n// };\n\n// export default ModalPrice;\n\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import Modal from 'react-modal';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   const overlayVariants = {\n//     hidden: { opacity: 0 },\n//     visible: { opacity: 1, transition: { duration: 0.1, ease: 'easeInOut' } },\n//   };\n\n//   return (\n//     <AnimatePresence>\n//       {isOpen && (\n//         <Modal\n//           isOpen={isOpen}\n//           onRequestClose={onRequestClose}\n//           contentLabel=\"Image Modal\"\n//           overlayClassName=\"modal_overlay\"\n//           className=\"modal_price\"\n//         >\n//           <motion.div\n//             key=\"modal\"\n//             initial=\"hidden\"\n//             animate=\"visible\"\n//             exit=\"hidden\"\n//             variants={overlayVariants}\n//           >\n//             <motion.div\n//               className=\"image_container\"\n//               initial={{ opacity: 0 }}\n//               animate={{ opacity: 1 }}\n//               exit={{ opacity: 0 }}\n//               transition={{ duration: 1.0, ease: 'easeInOut' }}\n//             >\n//               <button onClick={onRequestClose} className=\"close_modal\">\n//                 <svg className=\"icon_modal\">\n//                   <use xlinkHref={`${icons}#close`} />\n//                 </svg>\n//               </button>\n//               <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//             </motion.div>\n//           </motion.div>\n//         </Modal>\n//       )}\n//     </AnimatePresence>\n//   );\n// };\n\n// export default ModalPrice;\n","import React, { useEffect } from 'react';\nimport Slider from 'react-slick';\nimport { Transition } from 'react-transition-group';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst PrevArrow = ({ onClick }) => (\n  <div className=\"slide_arrow prev\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#left`} />\n    </svg>\n  </div>\n);\n\nconst NextArrow = ({ onClick }) => (\n  <div className=\"slide_arrow next\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#right`} />\n    </svg>\n  </div>\n);\n\nconst ModalProduct = ({ images, closeModal }) => {\n  useEffect(() => {\n    const closeOnEsc = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const closeOnClickOutside = event => {\n      if (event.target.classList.contains('modal_overlay')) {\n        closeModal();\n      }\n    };\n\n    document.body.addEventListener('keydown', closeOnEsc);\n    document.body.addEventListener('click', closeOnClickOutside);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEsc);\n      document.body.removeEventListener('click', closeOnClickOutside);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeModal]);\n\n  const settings = {\n    dots: true,\n    speed: 1500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    infinite: true,\n    pauseOnHover: false,\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n  };\n\n  return (\n    <Transition in={true}>\n      {state => (\n        <div className={`modal_overlay`} onClick={closeModal}>\n          <div\n            className={`modal_product modal-${state}`}\n            onClick={e => e.stopPropagation()}\n          >\n            <button type=\"button\" className=\"close_modal\" onClick={closeModal}>\n              <svg className=\"icon_modal\">\n                <use xlinkHref={`${icons}#close`} />\n              </svg>\n            </button>\n            <Slider {...settings}>\n              {images.map((imageData, index) => (\n                <div key={index} className=\"slide\">\n                  <img\n                    className=\"slide_img\"\n                    src={imageData.imageSrc}\n                    alt={`Slide ${index + 1}`}\n                  />\n                  <p\n                    style={{\n                      textAlign: 'center',\n                      marginTop: '10px',\n                      width: '100%',\n                    }}\n                  >\n                    {imageData.text.includes('(') ? (\n                      <>\n                        {imageData.text.substring(\n                          0,\n                          imageData.text.indexOf('(')\n                        )}\n                        <span style={{ fontWeight: 'bold', color: 'red' }}>\n                          {imageData.text.substring(\n                            imageData.text.indexOf('(')\n                          )}\n                        </span>\n                      </>\n                    ) : (\n                      imageData.text\n                    )}\n                  </p>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nexport default ModalProduct;\n","import React from 'react';\n\nconst ProductDetailSection = ({\n  productImage,\n  title,\n  description,\n  openSlider,\n  sliderImages,\n}) => {\n  return (\n    <section className=\"section3\" onClick={() => openSlider(sliderImages)}>\n      <div className=\"container\">\n        <div className=\"product_detail open-modal_product\">\n          <img\n            className=\"product_detail_image\"\n            src={productImage}\n            alt={title}\n          />\n          <div className=\"product_detail_info\">\n            <h2>{title}</h2>\n            <p dangerouslySetInnerHTML={{ __html: description }} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductDetailSection;\n","import React, { useState } from 'react';\nimport CreateImageSlider from '../Modal/ModalProduct';\nimport ProductDetailSection from './ProductDetailSection';\nimport './styles.css';\n\nconst ProductDetail = ({ product }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [images, setImages] = useState([]);\n\n  const openSlider = images => {\n    setIsModalOpen(true);\n    setImages(images);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setImages([]);\n  };\n\n  const createSliderImages = (product, prefix) => {\n    const sliderImages = [];\n\n    for (let index = 1; index <= 5; index++) {\n      const imageSrc = product[`${prefix}${index}`];\n      const textKey = `${prefix.replace('Img', 'Text')}${index}`;\n      const text = product[textKey];\n\n      if (imageSrc) {\n        sliderImages.push({\n          imageSrc: `${process.env.PUBLIC_URL}${imageSrc}`,\n          text: text,\n        });\n      }\n    }\n\n    return sliderImages;\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <main>\n      <ProductDetailSection\n        productImage={process.env.PUBLIC_URL + product.productImg_1}\n        title={product.title_product_1}\n        description={product.description_detail_1}\n        openSlider={() =>\n          openSlider(createSliderImages(product, 'sliderImg_1_'))\n        }\n      />\n      {product.title_product_2 && (\n        <ProductDetailSection\n          productImage={process.env.PUBLIC_URL + product.productImg_2}\n          title={product.title_product_2}\n          description={product.description_detail_2}\n          openSlider={() =>\n            openSlider(createSliderImages(product, 'sliderImg_2_'))\n          }\n        />\n      )}\n      {isModalOpen && (\n        <CreateImageSlider images={images} closeModal={closeModal} />\n      )}\n    </main>\n  );\n};\n\nexport default ProductDetail;\n","import React from 'react';\nimport \"./styles.css\";\n\nconst ButtonPrice = ({ onClick }) => (\n  <section className=\"section4\">\n    <div className=\"button\">\n      <button\n        type=\"button\"\n        className=\"product_button open-modal_price\"\n        onClick={onClick}\n      >\n        ПОДИВИТИСЯ ПРАЙС - ЛИСТ\n      </button>\n    </div>\n  </section>\n);\n\nexport default ButtonPrice;\n","import React, { useState } from 'react';\nimport ProductDetails from './ProductDetail';\nimport ButtonPrice from '../../components/ButtonPrice/ButtonPrice';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productData from '../../assets/productsData.json';\n\nconst ProductPage = ({ productName }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const product = productData.find(\n    product => product.productName === productName\n  );\n\n  if (!product) {\n    return <div>Product not found</div>;\n  }\n\n  const handleButtonPriceClick = () => {\n    const currentPath = window.location.pathname;\n    const imageName = currentPath.split('/').pop();\n\n    setImgSrc(`${process.env.PUBLIC_URL}/prices/${imageName}.jpg`);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <>\n      <ProductDetails product={product} />\n      <ButtonPrice onClick={handleButtonPriceClick} />\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </>\n  );\n};\n\nexport default ProductPage;","import React from 'react';\nimport ProductPage from '../../components/ProductsSet/ProductPage';\n\nconst Streych = () => {\n  const productName = 'streych';\n\n  return <ProductPage productName={productName} />;\n};\n\nexport default Streych;\n"],"names":["_ref","imgSrc","isOpen","onRequestClose","useEffect","document","body","classList","add","remove","_jsx","Transition","in","children","state","_jsxs","Modal","contentLabel","overlayClassName","className","concat","onClick","xlinkHref","icons","src","alt","PrevArrow","NextArrow","_ref2","_ref3","images","closeModal","closeOnEsc","event","key","closeOnClickOutside","target","contains","addEventListener","style","overflow","removeEventListener","settings","dots","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","infinite","pauseOnHover","prevArrow","nextArrow","e","stopPropagation","type","Slider","map","imageData","index","imageSrc","textAlign","marginTop","width","text","includes","_Fragment","substring","indexOf","fontWeight","color","productImage","title","description","openSlider","sliderImages","dangerouslySetInnerHTML","__html","product","isModalOpen","setIsModalOpen","useState","setImages","createSliderImages","prefix","replace","push","process","ProductDetailSection","productImg_1","title_product_1","description_detail_1","title_product_2","productImg_2","description_detail_2","CreateImageSlider","productName","modalIsOpen","setModalIsOpen","setImgSrc","productData","find","ProductDetails","ButtonPrice","handleButtonPriceClick","imageName","window","location","pathname","split","pop","ModalPrice","Streych","ProductPage"],"sourceRoot":""}