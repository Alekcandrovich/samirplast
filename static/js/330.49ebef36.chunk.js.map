{"version":3,"file":"static/js/330.49ebef36.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.3\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\n        const origin = getOrigin(target, transition || {}, this);\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","useContext","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","Queue","constructor","order","scheduled","Set","add","process","remove","index","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","arguments","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","cancelFrame","requestAnimationFrame","noop","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","clearTime","time","newTime","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","skipAnimations","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}