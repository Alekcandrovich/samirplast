{"version":3,"file":"static/js/871.fa7c568d.chunk.js","mappings":"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","sources":["components/Modal/ModalPrice.js","components/Modal/ModalProduct.js","components/ProductsSet/ProductDetailSection.js","components/ProductsSet/ProductDetail.js","components/ButtonPrice/ButtonPrice.js","components/ProductsSet/ProductPage.js","pages/Products/Streych.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import Modal from 'react-modal';\n// import { Transition } from 'react-transition-group';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   return (\n//     <Transition in={isOpen}>\n//       {state => (\n//         <Modal\n//           isOpen={isOpen}\n//           onRequestClose={onRequestClose}\n//           contentLabel=\"Image Modal\"\n//           overlayClassName=\"modal_overlay\"\n//           className={`modal_price modal-${state}`}\n//         >\n//           <button onClick={onRequestClose} className=\"close_modal\">\n//             <svg className=\"icon_modal\">\n//               <use xlinkHref={`${icons}#close`} />\n//             </svg>\n//           </button>\n//           <div className=\"image_container\">\n//             <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//           </div>\n//         </Modal>\n//       )}\n//     </Transition>\n//   );\n// };\n\n// export default ModalPrice;\n\n\n\n\n\n\n\n\n// import React, { useEffect } from 'react';\n// import Modal from 'react-modal';\n// import { Transition } from 'react-transition-group';\n// import icons from './icons.svg';\n// import './styles.css';\n\n// const ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n//   useEffect(() => {\n//     if (isOpen) {\n//       document.body.classList.add('modal-open');\n//     } else {\n//       document.body.classList.remove('modal-open');\n//     }\n//   }, [isOpen]);\n\n//   const transitionTimeout = 300; // Замените на ваше значение\n\n//   return (\n//     <Transition in={isOpen} timeout={transitionTimeout}>\n//       {state => (\n//         <Modal\n//           isOpen={isOpen}\n//           onRequestClose={onRequestClose}\n//           contentLabel=\"Image Modal\"\n//           overlayClassName=\"modal_overlay\"\n//           className={`modal_price modal-${state}`}\n//         >\n//           <button onClick={onRequestClose} className=\"close_modal\">\n//             <svg className=\"icon_modal\">\n//               <use xlinkHref={`${icons}#close`} />\n//             </svg>\n//           </button>\n//           <div className=\"image_container\">\n//             <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n//           </div>\n//         </Modal>\n//       )}\n//     </Transition>\n//   );\n// };\n\n// export default ModalPrice;\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useCallback } from 'react';\nimport icons from './icons.svg';\nimport './styles_.css';\n\nconst ModalPrice = ({ imgSrc, isOpen, onRequestClose }) => {\n  const closeModal = useCallback(() => {\n    onRequestClose();\n  }, [onRequestClose]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n\n    const handleEscape = event => {\n      if (isOpen && event.keyCode === 'Escape') closeModal();\n    };\n\n    document.addEventListener('keydown', handleEscape);\n    return () => document.removeEventListener('keydown', handleEscape);\n  }, [isOpen, closeModal]);\n\n  const overlayClassName = isOpen ? 'modal_overlay active' : 'modal_overlay';\n  const modalClassName = isOpen ? 'modal_price active' : 'modal_price';\n\n  return (\n    <div className={overlayClassName} id=\"modalOverlay\" onClick={closeModal}>\n      <div className={modalClassName} onClick={e => e.stopPropagation()}>\n        <button onClick={closeModal} className=\"close_modal\">\n          <svg className=\"icon_modal\">\n            <use xlinkHref={`${icons}#close`} />\n          </svg>\n        </button>\n        <div className=\"image_container\">\n          <img src={imgSrc} alt=\"ПРАЙС - ЛИСТ\" className=\"modal_image\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalPrice;\n","import React, { useEffect } from 'react';\nimport Slider from 'react-slick';\nimport { Transition } from 'react-transition-group';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport icons from './icons.svg';\nimport './styles.css';\n\nconst PrevArrow = ({ onClick }) => (\n  <div className=\"slide_arrow prev\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#left`} />\n    </svg>\n  </div>\n);\n\nconst NextArrow = ({ onClick }) => (\n  <div className=\"slide_arrow next\" onClick={onClick}>\n    <svg className=\"icon_modal\">\n      <use xlinkHref={`${icons}#right`} />\n    </svg>\n  </div>\n);\n\nconst ModalProduct = ({ images, closeModal }) => {\n  useEffect(() => {\n    const closeOnEsc = event => {\n      if (event.key === 'Escape') {\n        closeModal();\n      }\n    };\n\n    const closeOnClickOutside = event => {\n      if (event.target.classList.contains('modal_overlay')) {\n        closeModal();\n      }\n    };\n\n    document.body.addEventListener('keydown', closeOnEsc);\n    document.body.addEventListener('click', closeOnClickOutside);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.removeEventListener('keydown', closeOnEsc);\n      document.body.removeEventListener('click', closeOnClickOutside);\n      document.body.style.overflow = 'auto';\n    };\n  }, [closeModal]);\n\n  const settings = {\n    dots: true,\n    speed: 1500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 3000,\n    infinite: true,\n    pauseOnHover: false,\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n  };\n\n  return (\n    <Transition in={true}>\n      {state => (\n        <div className={`modal_overlay`} onClick={closeModal}>\n          <div\n            className={`modal_product modal-${state}`}\n            onClick={e => e.stopPropagation()}\n          >\n            <button type=\"button\" className=\"close_modal\" onClick={closeModal}>\n              <svg className=\"icon_modal\">\n                <use xlinkHref={`${icons}#close`} />\n              </svg>\n            </button>\n            <Slider {...settings}>\n              {images.map((imageData, index) => (\n                <div key={index} className=\"slide\">\n                  <img\n                    className=\"slide_img\"\n                    src={imageData.imageSrc}\n                    alt={`Slide ${index + 1}`}\n                  />\n                  <p\n                    style={{\n                      textAlign: 'center',\n                      marginTop: '10px',\n                      width: '100%',\n                    }}\n                  >\n                    {imageData.text.includes('(') ? (\n                      <>\n                        {imageData.text.substring(\n                          0,\n                          imageData.text.indexOf('(')\n                        )}\n                        <span style={{ fontWeight: 'bold', color: 'red' }}>\n                          {imageData.text.substring(\n                            imageData.text.indexOf('(')\n                          )}\n                        </span>\n                      </>\n                    ) : (\n                      imageData.text\n                    )}\n                  </p>\n                </div>\n              ))}\n            </Slider>\n          </div>\n        </div>\n      )}\n    </Transition>\n  );\n};\n\nexport default ModalProduct;\n","import React from 'react';\n\nconst ProductDetailSection = ({\n  productImage,\n  title,\n  description,\n  openSlider,\n  sliderImages,\n}) => {\n  return (\n    <section className=\"section3\" onClick={() => openSlider(sliderImages)}>\n      <div className=\"container\">\n        <div className=\"product_detail open-modal_product\">\n          <img\n            className=\"product_detail_image\"\n            src={productImage}\n            alt={title}\n          />\n          <div className=\"product_detail_info\">\n            <h2>{title}</h2>\n            <p dangerouslySetInnerHTML={{ __html: description }} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductDetailSection;\n","import React, { useState } from 'react';\nimport CreateImageSlider from '../Modal/ModalProduct';\nimport ProductDetailSection from './ProductDetailSection';\nimport './styles.css';\n\nconst ProductDetail = ({ product }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [images, setImages] = useState([]);\n\n  const openSlider = images => {\n    setIsModalOpen(true);\n    setImages(images);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setImages([]);\n  };\n\n  const createSliderImages = (product, prefix) => {\n    const sliderImages = [];\n\n    for (let index = 1; index <= 5; index++) {\n      const imageSrc = product[`${prefix}${index}`];\n      const textKey = `${prefix.replace('Img', 'Text')}${index}`;\n      const text = product[textKey];\n\n      if (imageSrc) {\n        sliderImages.push({\n          imageSrc: `${process.env.PUBLIC_URL}${imageSrc}`,\n          text: text,\n        });\n      }\n    }\n\n    return sliderImages;\n  };\n\n  if (!product) {\n    return null;\n  }\n\n  return (\n    <main>\n      <ProductDetailSection\n        productImage={process.env.PUBLIC_URL + product.productImg_1}\n        title={product.title_product_1}\n        description={product.description_detail_1}\n        openSlider={() =>\n          openSlider(createSliderImages(product, 'sliderImg_1_'))\n        }\n      />\n      {product.title_product_2 && (\n        <ProductDetailSection\n          productImage={process.env.PUBLIC_URL + product.productImg_2}\n          title={product.title_product_2}\n          description={product.description_detail_2}\n          openSlider={() =>\n            openSlider(createSliderImages(product, 'sliderImg_2_'))\n          }\n        />\n      )}\n      {isModalOpen && (\n        <CreateImageSlider images={images} closeModal={closeModal} />\n      )}\n    </main>\n  );\n};\n\nexport default ProductDetail;\n","import React from 'react';\nimport \"./styles.css\";\n\nconst ButtonPrice = ({ onClick }) => (\n  <section className=\"section4\">\n    <div className=\"button\">\n      <button\n        type=\"button\"\n        className=\"product_button open-modal_price\"\n        onClick={onClick}\n      >\n        ПОДИВИТИСЯ ПРАЙС - ЛИСТ\n      </button>\n    </div>\n  </section>\n);\n\nexport default ButtonPrice;\n","import React, { useState } from 'react';\nimport ProductDetails from './ProductDetail';\nimport ButtonPrice from '../../components/ButtonPrice/ButtonPrice';\nimport ModalPrice from '../../components/Modal/ModalPrice';\nimport productData from '../../assets/productsData.json';\n\nconst ProductPage = ({ productName }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n\n  const product = productData.find(\n    product => product.productName === productName\n  );\n\n  if (!product) {\n    return <div>Product not found</div>;\n  }\n\n  const handleButtonPriceClick = () => {\n    const currentPath = window.location.pathname;\n    const imageName = currentPath.split('/').pop();\n\n    setImgSrc(`${process.env.PUBLIC_URL}/prices/${imageName}.jpg`);\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <>\n      <ProductDetails product={product} />\n      <ButtonPrice onClick={handleButtonPriceClick} />\n      <ModalPrice\n        imgSrc={imgSrc}\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      />\n    </>\n  );\n};\n\nexport default ProductPage;","import React from 'react';\nimport ProductPage from '../../components/ProductsSet/ProductPage';\n\nconst Streych = () => {\n  const productName = 'streych';\n\n  return <ProductPage productName={productName} />;\n};\n\nexport default Streych;\n"],"names":["_ref","imgSrc","isOpen","onRequestClose","closeModal","useCallback","useEffect","document","body","classList","add","remove","handleEscape","event","keyCode","addEventListener","removeEventListener","overlayClassName","modalClassName","_jsx","className","id","onClick","children","_jsxs","e","stopPropagation","xlinkHref","concat","icons","src","alt","PrevArrow","NextArrow","_ref2","_ref3","images","closeOnEsc","key","closeOnClickOutside","target","contains","style","overflow","settings","dots","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","infinite","pauseOnHover","prevArrow","nextArrow","Transition","in","state","type","Slider","map","imageData","index","imageSrc","textAlign","marginTop","width","text","includes","_Fragment","substring","indexOf","fontWeight","color","productImage","title","description","openSlider","sliderImages","dangerouslySetInnerHTML","__html","product","isModalOpen","setIsModalOpen","useState","setImages","createSliderImages","prefix","replace","push","process","ProductDetailSection","productImg_1","title_product_1","description_detail_1","title_product_2","productImg_2","description_detail_2","CreateImageSlider","productName","modalIsOpen","setModalIsOpen","setImgSrc","productData","find","ProductDetails","ButtonPrice","handleButtonPriceClick","imageName","window","location","pathname","split","pop","ModalPrice","Streych","ProductPage"],"sourceRoot":""}